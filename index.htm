<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.3.5
    site: https://github.com/ksky521/nodePPT
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>前端开发科普类分享 - By 崔鹏</title>
    <link rel="stylesheet" media="all" href="./css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="./css/phone.css">
    
    <link rel="stylesheet" href="./js/highlight/styles/monokai_sublime.css">
    <link rel="stylesheet" href="./css/font-awesome.css">
    
<link rel="stylesheet" href="./css/theme.blue.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>“你”眼中的前端开发？</h1>
<h2>---论自生长的前端开发</h2>
<p><small>演讲者：崔鹏</small></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">
<h1>科普类分享</h1>
<blockquote>
<p>这个题材类型的分享对我来说还是头一次，之前也分享过很多，譬如Canvas入门与扩展，前端架构与工程化，前端设计模式，.NET CLR深入，Dump分析等等。</p>
</blockquote>
<p><br></p>
<blockquote>
<p>这次说是技术分享吧，其实又涉及不到具体的技术内容。但是对于好多没有从互联网工作过的同事来说，就像3年前我转前端开发的时候，或多或少都会有误解，由我主动去给大家解释一下，十分有必要。</p>
</blockquote>
<p><br></p>
<blockquote>
<p>对我来说，这也是个新问题，感觉这个问题也比较大，网络上也很少有类似的可参考可拷贝，关键是没有一个成型的模板去组织，所以以下的文字基本都是个人基于个人的经历或理解整理的，不能当成官方教条，权当科普。</p>
</blockquote>
<p><br></p>

</article></section></slide>
<slide class="slide" data-transition="earthquake"><section class="slide-wrapper"><div class="subSlide"><hgroup>
<h2>说说你眼中的前端开发是什么样的？</h2>

</hgroup><article>

<ul class="moveIn">
<li>前端就是切图的嘛！</li>
<li>前端就是做效果的嘛！</li>
<li>前端就是写JS的嘛！</li>
<li>前端没啥技术含量嘛。</li>
<li>就是个写代码的嘛。</li>
<li>。。。嘛</li>
</ul>

</article></div>
<div class="subSlide"><article>
<p><img src="http://www.36dsj.com/wp-content/uploads/2015/02/2413.jpg"></p>

</article></div>
<div class="subSlide"><article>
<h2>真的就是这样吗？</h2>
<ul class="moveIn">
<li>对于喜欢用”嘛“的人来说，也许是吧。。。</li>
<li>或者没有长期在这个领域思考过或者学习过</li>
<li>或者超脱了此问题的人，就像习主席不关注你代码什么鬼的</li>
<li>这些其实都可以理解。</li>
</ul>

</article></div>
<div class="subSlide"><article>
<h2>但我在做前端，故我有话说</h2>
<ul>
<li>我觉得我们是通过抽象建模，解决具体问题，创造虚拟与现实解决方案的。</li>
<li>我们在改变世界的认知，哈哈哈</li>
</ul>
<h2>希望通过本次分享能够</h2>
<ul class="moveIn">
<li>很希望这次简单分享，能给大家一点启迪，产生&quot;?&quot;,消灭“。”或“！” </li>
<li>我一直以菜鸟自居，去敬畏认知，敬畏未知，希望能跟大家产生共鸣。</li>
<li>希望能与大家一起学习，冷静，客观思考的能力。</li>
<li>抱歉，这次的分享目的止水为了让你对以前的认识产生&quot;?&quot;,要变成”。“，慢慢来吧！我也在不断消灭？的路上，哈哈</li>
<li>Let&#39;s go !</li>
</ul>

</article></div></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>前端是什么？</h2>
<ul>
<li>Web前端开发是一项很特殊的工作，涵盖的知识面非常广，既有具体的技术，又有抽象的理念。</li>
<li>简单地说，它的主要职能就是把网站的界面更好地呈现给用户。</li>
<li>感觉很容易，其实不简单。</li>
<li>既要有理性的东西，怎么做算法更快，怎么设计更好实现更好扩展，怎么开发效率更高。</li>
<li>还要有感性的东西，怎么做能让用户喜欢，用户的操作心理是怎么样的，用户喜欢什么样的。</li>
<li>既有理性东西，又有感性的东西的，感觉我们既是科学家，又是艺术家。</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h3>Yahoo 公司 前首席工程师， YUI作者， Zakas 认为：</h3>
<ul>
<li>前端工程师是计算机科学职业领域中最复杂的一个工种。</li>
<li>绝大多数传统的编程思想已经不适用了，为了在多种平台中使用，多种技术都借鉴了大量软科学的知识和理念。</li>
<li>成为优秀前端工程师所要具备的专业技术，涉及到广阔而复杂的领域，这些领域又会因为你最终必须服务的各方的介入而变得更加复杂。</li>
<li>专业技术可能会引领你进入成为前端工程师的大门，但只有运用该技术创造的应用程序以及你跟他人并肩协同的能力，才会真正让你变得优秀。</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>前端发展史</h2>
<ul>
<li>2003年左右，会一点Photoshop和Dreamweaver的操作，就可以制作网页。</li>
<li>2006年，左右后来会切图，生成HTML,CSS就可以制作网页，有时候他们要写点简单的JS，稍微复杂就捉襟见肘。</li>
<li>2008年前后，重体验，网商时代来临，尤其是10年后伴随着淘宝网，京东，美团等纯互联网企业的兴起，目前只掌握这些已经远远不够了，无论是开发难度上，还是开发方式上，现在的网页制作都更接近传统的网站后台开发，所以现在不再叫网页制作，而是叫Web前端开发。</li>
<li>发展历史其实还很短，前端还很年轻，但是前端发展很快，各种新技术，新需求，新产品层出不穷。</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>说说我与前端的前世今生</h2>
<ol class="moveIn">
<li>上学那会我之前做过PHP，给人家做过网站，赚过外快，便宜不贵，一个网站一口价300元，包含部署运维加售后。</li>
<li>临近毕业”站队“的时候，有人站在了IBM那边，选择了搞JAVA。我选择站在了微软那边，搞C#。因为我听人家说C++比C多两个+好，牛，C#比C++还多两个加号，更牛！</li>
<li>工作后，做过全栈前后端开发，做过数据库。后来我发现一个人的精力实在有限，好多东西要学习，却没时间去投入，要学习的东西太多<ul>
<li>既要学JS/CSS/HTML，又要学SQL，还要学.NET，JAVA，框架原理，底层原理等等。</li>
<li>认识只停留在面上，有广度的皮毛，没具体点的深度，更不可能有高度的认识。</li>
<li>一下子进入了知识的海洋一般，快要被淹死的感觉</li>
</ul>
</li>
<li>所以，工作三年后，我重新审视了一下做技术的方向，做起了专职前端开发</li>
<li>一晃两年半过去了，未知的东西却是越来越多，解决的问题也越来越多，好在我坚持了下来，渐渐对前端有了一点点自己的认识</li>
<li>对于以后，不抛弃，不放弃，我会伴随，与前端一起成长。</li>
</ol>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>前端工程师至少都要满足其需求的四类用户</h2>
<p class="flexbox vleft"><span>1、产品经理。 <span></p>
<blockquote>
<p>这些是负责策划应用程序的一群人。他们会想出很多新鲜的、奇怪的、甚至是不可是实现的应用。一般来说，产品经理都追求丰富的功能。</p>
</blockquote>
<p class="flexbox vleft"><span>2、UI设计师。  <span></p>
<blockquote>
<p>这些人负责应用程序的视觉设计和交互模拟。他们关心的是用户对什么敏感、交互的一贯性以及整体的好用性。一般来说，UI设计师于流畅靓丽、但并不容易实现的用户界面，而且他们经常不满前端工程师造成 1px 的误差。</p>
</blockquote>
<p class="flexbox vleft"><span>3、项目经理。  <span></p>
<blockquote>
<p>这些人负责实际地运行和维护应用程序。项目管理的主要关注点，无外乎正常运行时间、应用程序始终正常可用的时间、性能和截止日期。项目经理追求的目标往往是尽量保持事情的简单化，以及不在升级更新时引入新问题。</p>
</blockquote>
<p class="flexbox vleft"><span>4、最终用户。  <span></p>
<blockquote>
<p>指的是应用程序的主要消费者。尽管前端工程师不会经常与最终用户打交道，但他们的反馈意见至关重要。最终用户要求最多的就是对个人有用的功能，以及竞争性产品所具备的功能。</p>
</blockquote>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>前端工程师应该关注哪些人的意见呢？</h2>
<h3>答案是ALL,所有这四类人。</h3>
<ul>
<li>前端工程师必须知道如何平衡这四类人的需求和预期，然后在此基础上拿出最佳解决方案。</li>
<li>前端工程师处于与这四类人沟通的交汇点上，需要时刻与这四类人保持沟通。</li>
<li>比如，如果一个非常酷的新功能因为会影响前端性能，必须删繁就简，你怎么跟产品经理解释？</li>
<li>比如，假设某个设计如果不改回原方案可能会给应用程序造成负面影响，你怎么才能说服UI设计师？</li>
<li>作为前端工程师，你必须了解每一类人的想法从何而来，必须能拿出所有各方都能接受的解决方案。</li>
<li>所以从某种意义上说，前端工程师就像是一位大使，需要时刻抱着外交官的心态来应对每一天的工作。</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>前端具体要掌握哪些具体的技能？</h2>
<style>
slides>slide .slide-wrapper{
overflow:hidden;
}
</style><iframe data-src="http://html5ify.com/fks/fks_chart/" style="width:1920px;height:600px;margin:0 auto;" src="about:blank;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>如何去评价一个前端水平？</h2>
<div class="subSlide"><article>
<h3>最基本的</h3>
<ul>
<li>DOM结构与DOM操作</li>
<li>事件,怎样使用事件以及IE和DOM事件模型之间存在哪些主要差别，移动端Touch事件应用</li>
<li>Ajax,JSON,XMLHttpRequest——这是什么、怎样完整地执行一次GET请求、怎样检测错误。</li>
<li>CSS,盒模型,块级元素与行内元素,浮动元素——怎么使用它们、它们有什么问题以及怎么解决这些问题。</li>
<li>JS,面向对象实现原理、闭包机制、作用域，函数式编程，原型对象，闭包</li>
<li>切图技巧，PS的基本使用</li>
<li>浏览器差异,渐进增强，优雅降级</li>
<li>HTTP协议</li>
<li>more
<a href="https://github.com/h5bp/Front-end-Developer-Interview-Questions" target="_blank">https://github.com/h5bp/Front-end-Developer-Interview-Questions</a></li>
</ul>

</article></div>
<div class="subSlide"><article>
<h3>然后呢：</h3>
<ul>
<li>对Web标准的理解</li>
<li>问题解决能力</li>
<li>原生开发能力</li>
<li>框架设计能力</li>
<li>学习能力</li>
<li>UI和交互组件开发能力</li>
<li>底层认知能力（如浏览器渲染引擎，后端编程等）</li>
<li>眼界视野，站的高，看得远，想的长久</li>
<li>沟通协作能力</li>
</ul>

</article></div>
<div class="subSlide"><article>
<h3>最重要的</h3>
<ul>
<li>要对前端充满激情</li>
<li>有自己的技术信仰</li>
<li>有渴望尝试新技术的强烈愿景及较强的主观学习、客观探索能力</li>
<li>拥有令人难以置信的关注细节的精神，喜欢做到完美，极致</li>
<li>常在技术社区活动</li>
<li>工作积极主动，有梦想</li>
<li>知识要有广度，认知要有高度，理解要有深度，做事要有态度，协作要有大度</li>
</ul>

</article></div>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>推荐基本书籍</h2>
<div class="subSlide"><article>
<h3>初级读物：</h3>
<ul>
<li>《JavaScript高级程序设计》<blockquote>
<p>一本非常完整的经典入门书籍，被誉为JavaScript圣经之一，详解的非常详细，最新版第三版已经发布了。</p>
</blockquote>
</li>
<li>《JavaScript王者归来》<blockquote>
<p>百度的一个Web开发项目经理写的，作为初学者准备的入门级教程也不错。</p>
</blockquote>
</li>
</ul>

</article></div>
<div class="subSlide"><article>
<h3>中级读物：</h3>
<ul>
<li><p>《JavaScript权威指南》</p>
<blockquote>
<p>另外一本JavaScript圣经，讲解的也非常详细。</p>
</blockquote>
</li>
<li><p>《JavaScript.The.Good.Parts》</p>
<blockquote>
<p>Yahoo大牛，JavaScript精神领袖Douglas Crockford的大作，虽然才100多页，但是字字珠玑啊！</p>
</blockquote>
</li>
<li>《高性能JavaScript》《JavaScript高级程序设计》<blockquote>
<p>作者Nicholas C. Zakas大作。</p>
</blockquote>
</li>
<li>《Eloquent JavaScript》：<blockquote>
<p>这本书才200多页，非常短小，通过几个非常经典的例子来介绍JavaScript方方面面的知识和应用方法。</p>
</blockquote>
</li>
</ul>

</article></div>
<div class="subSlide"><article>
<h3>高级读物：</h3>
<ul>
<li>《JavaScript Patterns 》<blockquote>
<p>书中介绍到了各种经典的模式，如构造函数、单例、工厂等等，值得学习。</p>
</blockquote>
</li>
<li>《Pro.JavaScript.Design.Patterns》<blockquote>
<p>Apress出版社讲解JavaScript设计模式的书，非常不错。</p>
</blockquote>
</li>
<li>《Developing JavaScript Web Applications》<blockquote>
<p>构建富应用的好书，针对MVC模式有较为深入的讲解，同时也对一些流程的库进行了讲解。</p>
</blockquote>
</li>
<li>《Developing Large Web Applications》<blockquote>
<p>不仅有JavaScript方面的介绍，还有CSS、HTML方面的介绍，但是介绍的内容却都非常不错，真正考虑到了一个大型的Web程序下，如何进行JavaScript架构设计，值得一读。</p>
</blockquote>
</li>
</ul>

</article></div>
<div class="subSlide"><article>
<h3>要做优秀的前端工程师：</h3>
<ul>
<li>《高性能网站建设指南》</li>
<li>《Yahoo工程师的网站性能优化的建议》<blockquote>
<p>“YSLOW”性能优化建议</p>
</blockquote>
</li>
<li>《网站重构》</li>
<li>《Web开发敏捷之道》</li>
<li>《有一本书，叫互联网》<blockquote>
<p>Angularjs,ReactJS、“前端框架设计”、“HTML5”、“CSS3”，”渲染引擎原理“，”深入高性能V8虚拟机“等等</p>
</blockquote>
</li>
</ul>

</article></div>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<ul>
<li>人们常说：不想当裁缝的司机，不是个好厨师。</li>
<li>如果单纯只是学习前端编程语言、而不懂后端编程语言（PHP、http、ASP.NET，JSP、Python），也不能算作是优秀的前端工程师。</li>
<li>在成为一个优秀的前端工程师的道路上，充满了汗水和辛劳。</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>既然选择了远方 便只顾风雨兼程</h1>
<center class="moveIn">
<em> 与君共享
</em> That&#39;s All ,谢谢！
</center>
</article></section></slide>
        

        <!-- <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
                <h2 style="color: white;">Powered By nodePPT v1.3.5</h2>
            </article>
        </slide> -->
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="./js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
var base = location.protocol + '//' + location.host;

var path = (location.pathname + '#').split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="./js/mixjs/lib/event/broadcast.js"></script>
<script src="./js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'zoomin',
    width: 1100,
    dir: './',
    
    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },
    
    tipID: 'tip'
});
MixJS.loadJS('highlight/highlight.pack.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>


<!--placeholder-->
</body>
</html>
